{
  "openapi": "3.1.0",
  "info": {
    "title": "Ilma API",
    "description": "School management system API with end-to-end encryption for messaging. Currently under development.",
    "contact": {
      "name": "API Support / Developer",
      "email": "jero.lampila@gmail.com"
    },
    "license": {
      "name": ""
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/attendance": {
      "post": {
        "tags": [
          "attendance"
        ],
        "operationId": "record_attendance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordAttendanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Attendance recorded"
          },
          "403": {
            "description": "Forbidden - only teachers can record attendance"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "JWT token issued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials"
          }
        }
      }
    },
    "/api/auth/request-password-reset": {
      "post": {
        "tags": [
          "auth"
        ],
        "operationId": "request_password_reset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset requested"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "operationId": "reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid token or data"
          }
        }
      }
    },
    "/api/classes": {
      "get": {
        "tags": [
          "classes"
        ],
        "operationId": "list_classes",
        "responses": {
          "200": {
            "description": "List of classes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Class"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "classes"
        ],
        "operationId": "create_class",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClassRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Class created"
          },
          "403": {
            "description": "Forbidden - only teachers can create classes"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/classes/{class_id}/students": {
      "post": {
        "tags": [
          "classes"
        ],
        "operationId": "add_student_to_class",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "description": "Class UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStudentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Student added to class"
          },
          "403": {
            "description": "Forbidden - only class teacher can add students"
          },
          "404": {
            "description": "Class not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/grades": {
      "post": {
        "tags": [
          "grades"
        ],
        "operationId": "assign_grade",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignGradeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Grade assigned"
          },
          "403": {
            "description": "Forbidden - only teachers can assign grades"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "get_me",
        "responses": {
          "200": {
            "description": "Current authenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/messages/threads": {
      "get": {
        "tags": [
          "messages"
        ],
        "operationId": "list_threads",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of threads",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThreadPreview"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "messages"
        ],
        "operationId": "send_message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Message sent, thread created if needed"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/messages/threads/{thread_id}": {
      "get": {
        "tags": [
          "messages"
        ],
        "operationId": "get_thread_messages",
        "parameters": [
          {
            "name": "thread_id",
            "in": "path",
            "description": "Thread UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of messages",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Message ID to paginate before",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "permissions"
        ],
        "operationId": "list_permissions",
        "responses": {
          "200": {
            "description": "List of permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/permissions/sets": {
      "get": {
        "tags": [
          "permissions"
        ],
        "operationId": "list_permission_sets",
        "responses": {
          "200": {
            "description": "List of permission sets with permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionSet"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/user/public-key/{username}": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "get_user_public_key_by_username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's public key retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/user/recovery-key/{username}": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "get_recovery_key",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recovery key retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecoveryKeyResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden — admin access only"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/user/set-recovery-key": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "set_recovery_key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRecoveryKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Recovery key updated"
          },
          "400": {
            "description": "Invalid data or unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}/permissions": {
      "get": {
        "tags": [
          "permissions"
        ],
        "operationId": "get_user_permissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "permissions"
        ],
        "operationId": "assign_user_permissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPermissionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Permissions assigned"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}/public_key": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "get_user_public_key",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's public key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddStudentRequest": {
        "type": "object",
        "required": [
          "student_id"
        ],
        "properties": {
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AssignGradeRequest": {
        "type": "object",
        "required": [
          "student_id",
          "class_id",
          "grade"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "grade": {
            "type": "string"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AssignPermissionsRequest": {
        "type": "object",
        "required": [
          "permission_ids"
        ],
        "properties": {
          "permission_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "Attendance": {
        "type": "object",
        "required": [
          "id",
          "student_id",
          "class_id",
          "status",
          "recorded_at",
          "recorded_by"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "recorded_at": {
            "type": "string",
            "format": "date-time"
          },
          "recorded_by": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/AttendanceStatus"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AttendanceStatus": {
        "type": "string",
        "enum": [
          "present",
          "absent",
          "late"
        ]
      },
      "Class": {
        "type": "object",
        "required": [
          "id",
          "name",
          "teacher_id",
          "created_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateClassRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "role",
          "public_key"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "public_key": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "EncryptedKey": {
        "type": "object",
        "required": [
          "recipient_id",
          "encrypted_key"
        ],
        "properties": {
          "encrypted_key": {
            "type": "string"
          },
          "recipient_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Grade": {
        "type": "object",
        "required": [
          "id",
          "student_id",
          "class_id",
          "teacher_id",
          "grade",
          "assigned_at"
        ],
        "properties": {
          "assigned_at": {
            "type": "string",
            "format": "date-time"
          },
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "grade": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          },
          "teacher_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "thread_id",
          "sender_id",
          "sent_at",
          "ciphertext",
          "encrypted_keys"
        ],
        "properties": {
          "ciphertext": {
            "type": "string"
          },
          "encrypted_keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EncryptedKey"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "sender_id": {
            "type": "string",
            "format": "uuid"
          },
          "sent_at": {
            "type": "string",
            "format": "date-time"
          },
          "thread_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "MessagePaginationQuery": {
        "type": "object",
        "properties": {
          "before": {
            "type": [
              "string",
              "null"
            ]
          },
          "limit": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          }
        }
      },
      "PaginationQuery": {
        "type": "object",
        "properties": {
          "limit": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "offset": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          }
        }
      },
      "PasswordResetRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "PasswordResetToken": {
        "type": "object",
        "required": [
          "id",
          "user_id",
          "token",
          "expires_at",
          "created_at",
          "used"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string"
          },
          "used": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Permission": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PermissionSet": {
        "type": "object",
        "required": [
          "id",
          "name",
          "permissions"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "PublicKeyResponse": {
        "type": "object",
        "required": [
          "public_key"
        ],
        "properties": {
          "public_key": {
            "type": "string"
          }
        }
      },
      "RecordAttendanceRequest": {
        "type": "object",
        "required": [
          "student_id",
          "class_id",
          "status"
        ],
        "properties": {
          "class_id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/AttendanceStatus"
          },
          "student_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RecoveryKeyResponse": {
        "type": "object",
        "required": [
          "recovery_key"
        ],
        "properties": {
          "recovery_key": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": [
          "reset_token",
          "new_password_hash",
          "encrypted_private_key_blob"
        ],
        "properties": {
          "encrypted_private_key_blob": {
            "type": "string"
          },
          "new_password_hash": {
            "type": "string"
          },
          "reset_token": {
            "type": "string"
          }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": [
          "participant_ids",
          "ciphertext",
          "encrypted_keys"
        ],
        "properties": {
          "ciphertext": {
            "type": "string"
          },
          "encrypted_keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EncryptedKey"
            }
          },
          "participant_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "SetRecoveryKeyRequest": {
        "type": "object",
        "required": [
          "username",
          "recovery_key"
        ],
        "properties": {
          "recovery_key": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "Thread": {
        "type": "object",
        "required": [
          "id",
          "participants",
          "created_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ThreadPreview": {
        "type": "object",
        "required": [
          "thread_id",
          "last_message_preview",
          "last_message_at"
        ],
        "properties": {
          "last_message_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_message_preview": {
            "type": "string"
          },
          "thread_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "role",
          "is_superuser",
          "public_key",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_superuser": {
            "type": "boolean"
          },
          "public_key": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "student",
          "teacher",
          "principal"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "users",
      "description": "User management and profile operations"
    },
    {
      "name": "permissions",
      "description": "Permission and role management"
    },
    {
      "name": "classes",
      "description": "Class creation and student management"
    },
    {
      "name": "grades",
      "description": "Grade assignment and management"
    },
    {
      "name": "attendance",
      "description": "Attendance tracking and reporting"
    },
    {
      "name": "messages",
      "description": "End-to-end encrypted messaging system"
    }
  ]
}